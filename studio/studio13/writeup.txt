1. Donggyu Kim(437008)

2.
Code : 
fn main() {
   
    let mut a : f64 = 0.0;

    println!("{}", f64::cos(f64::sin(a)));
}


Output :
1


3. 
Modified Code:
let result = || f64::cos(f64::sin(a));

4. 
Modified Code :
struct MyStruct {
    first : f64,
    func_one : fn(f64) -> f64,
    func_two : fn(f64) -> f64,
}

impl MyStruct {
    fn new(input : f64) -> Self {
        MyStruct {
            first : input,
            func_one : f64::cos,
            func_two : f64::sin,
        }
    }
}

fn main() {
   
    let a : f64 = 0.0;

    let obj = MyStruct::new(a);

    let result = || (obj.func_one)((obj.func_two)(obj.first));

    println!("{}", result());
}



5.

Code :
fn main() {
   
    let a : f64 = 0.0;


    let obj = MyStruct::<f64>::new(a, f64::cos, f64::sin);

    let result = || (obj.func_one)((obj.func_two)(obj.first));

    println!("{}", result());
}

struct MyStruct<T> {
    first : T,
    func_one : fn(T) -> T,
    func_two : fn(T) -> T,
}

impl<T> MyStruct<T> {
    fn new(input : T, f1 : fn(T) -> T, f2:  fn(T)-> T) -> Self {
        MyStruct {
            first : input,
            func_one :f1,
            func_two :f2,
        }
    }
}

6. 
Code :

    let mut a : String = "Hello".to_string();
    
    let mut result =  || {
        a.push_str(", World!");
        println!("{:?}", a);
    };

    result();

Output:
"Hello, World!"


