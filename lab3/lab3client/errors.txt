error messages:
^ expected `&MutexGuard<'_, Player>`, found `PoisonError<MutexGuard<'_, Player>>`


todo
Update your SceneFragment struct's methods as needed, to match on the result of a call to lock on the appropriate element of that vector, using a ref or mut pattern to extract and use an immutable or mutable SceneFragment reference instead of calling methods directly on the vector's elements.

-> calling lock() while lock() is still being used....
trying to acquire lock everytime when I accessed field of player struct (misunderstood the life of a lock that I kept calling lock when it was taken already)

43 |     pub fn process_config(&mut self, script_config: &ScriptConfig) -> Result<(), u8> {
   |                           ---------
   |                           |
   |                           `self` is a reference that is only valid in the method body
   |                           let's call the lifetime of this reference `'1`
...
87 |                         thread::spawn(move || self.fragments[latest_fragment_index].lock().unwrap().prepare(some_string))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         `self` escapes the method body here
   |                         argument requires that `'1` must outlive `'static`


   question 5-3
   If the prepare() already returns Result,
   but instruction tells me to panic,
   can i do both? or reconfigure everything?

    

                    let cloned_fragment =  self.fragments[latest_fragment_index].clone();
                    let cloned_string = some_string.clone();

                    // let mut output = todo!();
                    thread_handles.push( 
                        thread::spawn(move || {
                            cloned_fragment.lock().unwrap().prepare(&cloned_string);
                            // cloned_fragment.lock().unwrap().prepare(&cloned_string);
                          
                        }
                        )
                    );-> this took me 3 days to figure out...